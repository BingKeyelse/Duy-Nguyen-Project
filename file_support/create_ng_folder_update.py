import os
import shutil
from datetime import datetime

def auto_check_and_create_folder_and_file_NG(self):
    link = os.path.join(self.current_file_path, "data_NG")

    self.year_backup = []
    self.month_backup = []
    self.path_ng_save_today = None

    today = datetime.today()
    self.month_now = today.month
    self.year_now = today.year

    # Táº¡o thÆ° má»¥c hiá»‡n táº¡i náº¿u chÆ°a cÃ³
    self.path_folder_year_now = os.path.join(link, str(self.year_now))
    self.path_folder_today_ng_now = os.path.join(self.path_folder_year_now, str(self.month_now))

    if not os.path.exists(self.path_folder_today_ng_now):
        os.makedirs(self.path_folder_today_ng_now)

    # Kiá»ƒm tra xem thÆ° má»¥c data_NG cÃ³ dá»¯ liá»‡u khÃ´ng
    if not os.path.exists(link) or not os.listdir(link):
        print("âš  ThÆ° má»¥c 'data_NG' trá»‘ng, khÃ´ng cÃ³ dá»¯ liá»‡u Ä‘á»ƒ kiá»ƒm tra.")
        return

    # Thu tháº­p danh sÃ¡ch nÄƒm
    self.year_backup = sorted(os.listdir(link))
    
    if len(self.year_backup) == 0:
        print("âš  KhÃ´ng cÃ³ nÄƒm nÃ o trong thÆ° má»¥c 'data_NG'.")
        return

    check_year_now = os.path.join(link, self.year_backup[-1])  # Láº¥y nÄƒm má»›i nháº¥t

    # Thu tháº­p danh sÃ¡ch thÃ¡ng
    self.month_backup = sorted(os.listdir(check_year_now))

    if len(self.month_backup) == 0:
        print("âš  KhÃ´ng cÃ³ thÃ¡ng nÃ o trong thÆ° má»¥c nÄƒm gáº§n nháº¥t.")
        return

    # Kiá»ƒm tra náº¿u Ä‘Ã£ cÃ³ Ã­t nháº¥t 6 thÃ¡ng
    if int(self.month_backup[-1]) >= 6:
        if len(self.month_backup) > 6:
            for month in self.month_backup[:-6]:
                path_month_clear = os.path.join(check_year_now, month)

                if os.path.exists(path_month_clear):
                    print(f"ğŸ—‘ XÃ³a thÆ° má»¥c thÃ¡ng cÅ©: {path_month_clear}")
                    try:
                        shutil.rmtree(path_month_clear)
                    except Exception as e:
                        print(f"âš  Lá»—i khi xÃ³a {path_month_clear}: {e}")

        # XÃ³a cÃ¡c nÄƒm cÅ© hÆ¡n nÄƒm gáº§n nháº¥t
        for year in self.year_backup[:-1]:
            path_year_to_clear = os.path.join(link, year)

            if os.path.exists(path_year_to_clear):
                print(f"ğŸ—‘ XÃ³a thÆ° má»¥c nÄƒm cÅ©: {path_year_to_clear}")
                try:
                    shutil.rmtree(path_year_to_clear)
                except Exception as e:
                    print(f"âš  Lá»—i khi xÃ³a {path_year_to_clear}: {e}")

    # Náº¿u chÆ°a Ä‘á»§ 6 thÃ¡ng, láº¥y thÃªm thÃ¡ng tá»« nÄƒm trÆ°á»›c
    else:
        month_cap = 6 - int(self.month_backup[-1])

        if len(self.year_backup) >= 2:
            path_year_old = os.path.join(link, self.year_backup[-2])

            for month in os.listdir(path_year_old):
                if int(month) <= (12 - month_cap):
                    path_month_old_clear = os.path.join(path_year_old, month)

                    if os.path.exists(path_month_old_clear):
                        print(f"ğŸ—‘ XÃ³a thÃ¡ng cÅ© tá»« nÄƒm trÆ°á»›c: {path_month_old_clear}")
                        try:
                            shutil.rmtree(path_month_old_clear)
                        except Exception as e:
                            print(f"âš  Lá»—i khi xÃ³a {path_month_old_clear}: {e}")
